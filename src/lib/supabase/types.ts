// This file is a placeholder for types generated by Supabase CLI.
// We are providing a manual definition for the demo application.
// In a real project: `npx supabase gen types typescript --project-id <your-project-id> > src/lib/supabase/types.ts`

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      menu_items: {
        Row: {
          id: number
          name: string
          description: string
          price: number
          category: string
          image: string
          imageHint: string
        }
        Insert: {
          id?: number
          name: string
          description: string
          price: number
          category: string
          image: string
          imageHint: string
        }
        Update: {
          id?: number
          name?: string
          description?: string
          price?: number
          category?: string
          image?: string
          imageHint?: string
        }
      }
      orders: {
        Row: {
          id: number
          created_at: string
          customer_name: string
          customer_phone: string
          status: "New" | "Preparing" | "Ready for Pickup" | "Completed"
          total_price: number
        }
        Insert: {
          id?: number
          created_at?: string
          customer_name: string
          customer_phone: string
          status?: "New" | "Preparing" | "Ready for Pickup" | "Completed"
          total_price: number
        }
        Update: {
          id?: number
          created_at?: string
          customer_name?: string
          customer_phone?: string
          status?: "New" | "Preparing" | "Ready for Pickup" | "Completed"
          total_price?: number
        }
      }
      order_items: {
        Row: {
          id: number
          order_id: number
          menu_item_id: number
          quantity: number
          price_at_order: number
        }
        Insert: {
          id?: number
          order_id: number
          menu_item_id: number
          quantity: number
          price_at_order: number
        }
        Update: {
          id?: number
          order_id?: number
          menu_item_id?: number
          quantity?: number
          price_at_order?: number
        }
      }
    }
    Views: { [_ in never]: never }
    Functions: { [_ in never]: never }
    Enums: { [_ in never]: never }
    CompositeTypes: { [_ in never]: never }
  }
}
